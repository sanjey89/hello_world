#include <iostream>
using namespace std;

class FIO
{
	char *m_ps_name;
	char *m_ps_surname;
	char *m_ps_lastname;

public:

	FIO(char * = "Unknown", char * = "Unknown", char * = "Unknown");
   ~FIO();

   FIO(const FIO& other)
   {
	   cout << "Копируем ФИО\n";
	   cout << "Копируем Имя\n";
	   delete[]m_ps_name;
	   int Capacity = strlen(other.GetName() + 1);
	   m_ps_name = new char[Capacity];
	   strcpy_s(m_ps_name, Capacity, other.GetName());

	   cout << "Копируем Фамилию\n";
	   delete[]m_ps_surname;
	   Capacity = strlen(other.GetSurName() + 1);
	   m_ps_surname = new char[Capacity];
	   strcpy_s(m_ps_surname, Capacity, other.GetSurName());

	   cout << "Копируем Отчество\n";
	   delete[]m_ps_lastname;
	   Capacity = strlen(other.GetLastName() + 1);
	   m_ps_lastname = new char[Capacity];
	   strcpy_s(m_ps_lastname, Capacity, other.GetLastName());
   }

   const char *GetName()const;
   const char *GetSurName()const;
   const char *GetLastName()const;

   void SetName(char *);
   void SetSurName(char *);
   void SetLastName(char *);
};

FIO::FIO(char *name, char *surname, char *lastname)
{
	cout << "Создаем ФИО\n";
	int len_name;
	
	len_name = strlen(name) + 1;
	m_ps_name = new char[len_name];
	strcpy_s(m_ps_name, len_name, name);

	len_name = strlen(lastname) + 1;
	m_ps_lastname = new char[len_name];
	strcpy_s(m_ps_lastname, len_name, lastname);

	len_name = strlen(surname) + 1;
	m_ps_surname = new char[len_name];
	strcpy_s(m_ps_surname, len_name, surname);
}
FIO::~FIO()
{
	cout << "Удаляем имя\n";
	delete[]m_ps_name;
	m_ps_name = nullptr;
	delete[]m_ps_surname;
	m_ps_surname = nullptr;
	delete[]m_ps_lastname;
	m_ps_lastname = nullptr;
	cout << "Все удалено\n";
}
void FIO::SetName(char * name)
{
	cout << "Меняем имя\n";
	int lenth = strlen(name) + 1;
	delete[]m_ps_name;
	m_ps_name = new char[lenth];
	strcpy_s(m_ps_name, lenth, name);
}
void FIO::SetSurName(char * surname)
{
	cout << "Меняем фамилию\n";
	int lenth = strlen(surname) + 1;
	delete[]m_ps_surname;
	m_ps_surname = new char[lenth];
	strcpy_s(m_ps_surname, lenth, surname);
}
void FIO::SetLastName(char * lastname)
{
	cout << "Меняем отчество\n";
	int lenth = strlen(lastname) + 1;
	delete[]m_ps_lastname;
	m_ps_lastname = new char[lenth];
	strcpy_s(m_ps_lastname, lenth, lastname);
}
const char * FIO::GetName()const{ return m_ps_name; }
const char * FIO::GetSurName()const{ return m_ps_surname; }
const char * FIO::GetLastName()const{ return m_ps_lastname; }

class DATE{
	int day;
	int month;
	int year;
public:
	DATE(int day = 0, int month = 0, int year = 0)
	{
		this->day = day;
		this->month = month;
		this->year = year;
	}
	int GetDay(){ return day; }
	int GetMonth(){ return month; }
	int GetYear(){ return year; }
	void SetDay(int a_day){ day = a_day; }
	void SetMonth(int a_month){ month = a_month; }
	void SetYear(int a_year){ year = a_year; }
};

class Student
{
	DATE m_date;
	FIO m_fio;
	char * m_psHome;
	char * m_psPhone;
	int * m_mark_zachet;
	int * m_mark_kurs;
	int * m_mark_exam;

	void iniMark(int a_size_mark_z, int a_size_mark_k, int a_size_mark_e)
	{
		m_mark_zachet = new int[a_size_mark_z];
		for (int i = 0; i < a_size_mark_z; i++)
		{
			m_mark_zachet = 0;
		}
		m_mark_kurs = new int[a_size_mark_k];
		for (int i = 0; i < a_size_mark_k; i++)
		{
			m_mark_kurs = 0;
		}
		m_mark_exam = new int[a_size_mark_e];
		for (int i = 0; i < a_size_mark_e; i++)
		{
			m_mark_exam = 0;
		}
	}
public:
	Student(FIO a_fio, DATE a_date, char* a_home, char* a_phone, unsigned size_mark_z, unsigned size_mark_k, unsigned size_mark_e)
	{
		m_fio = a_fio;
		m_date = a_date;
		int Capacity_home = strlen(a_home) + 1;
		m_psHome = new char(Capacity_home);
		strcpy_s(m_psHome, Capacity_home, a_home);
		int Capacity_phone = strlen(a_phone) + 1;
		m_psPhone = new char(Capacity_phone);
		strcpy_s(m_psPhone, Capacity_phone, a_phone);
		iniMark(size_mark_z, size_mark_k, size_mark_e);
	}
	/*Student(FIO a_fio)
	{
		m_fio = a_fio;

	}*/

	DATE GetDate()const{ return m_date; }
	FIO GetFIO()const{ return m_fio; }
};

int main(void)
{
	setlocale(LC_ALL, "RUS");
	Student Vasya({ "Vasya", "Valera", "Petya" }, { 12, 12, 1989 }, "Zabolotnogo", "0634903258", 10, 10, 10);
	//cout << Vasya.GetDate().GetYear();
}
