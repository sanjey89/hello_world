#include <iostream>
using namespace std;

class FIO
{
	char *m_ps_name;
	char *m_ps_surname;
	char *m_ps_lastname;

public:

	FIO(char * = "Unknown", char * = "Unknown", char * = "Unknown");
   ~FIO();

   const char *GetName()const;
   const char *GetSurName()const;
   const char *GetLastName()const;

   void SetName(char *);
   void SetSurName(char *);
   void SetLastName(char *);
};

FIO::FIO(char *name, char *surname, char *lastname)
{
	cout << "Создаем ФИО\n";
	int len_name;
	
	len_name = strlen(name) + 1;
	m_ps_name = new char[len_name];
	strcpy_s(m_ps_name, len_name, name);

	len_name = strlen(lastname) + 1;
	m_ps_lastname = new char[len_name];
	strcpy_s(m_ps_lastname, len_name, lastname);

	len_name = strlen(surname) + 1;
	m_ps_surname = new char[len_name];
	strcpy_s(m_ps_surname, len_name, surname);
}
FIO::~FIO()
{
	cout << "Удаляем имя\n";
	delete[]m_ps_name;
	delete[]m_ps_surname;
	delete[]m_ps_lastname;
}
void FIO::SetName(char * name)
{
	cout << "Меняем имя\n";
	int lenth = strlen(name) + 1;
	delete[]m_ps_name;
	m_ps_name = new char[lenth];
	strcpy_s(m_ps_name, lenth, name);
}
void FIO::SetSurName(char * surname)
{
	cout << "Меняем фамилию\n";
	int lenth = strlen(surname) + 1;
	delete[]m_ps_surname;
	m_ps_surname = new char[lenth];
	strcpy_s(m_ps_surname, lenth, surname);
}
void FIO::SetLastName(char * lastname)
{
	cout << "Меняем отчество\n";
	int lenth = strlen(lastname) + 1;
	delete[]m_ps_lastname;
	m_ps_lastname = new char[lenth];
	strcpy_s(m_ps_lastname, lenth, lastname);
}
const char * FIO::GetName()const{ return m_ps_name; }
const char * FIO::GetSurName()const{ return m_ps_surname; }
const char * FIO::GetLastName()const{ return m_ps_lastname; }

class DATE{
	int day;
	int month;
	int year;
public:
	DATE(int day = 0, int month = 0, int year = 0)
	{
		this->day = day;
		this->month = month;
		this->year = year;
	}
	int GetDay(){ return day; }
	int GetMonth(){ return month; }
	int GetYear(){ return year; }
	void SetDay(int a_day){ day = a_day; }
	void SetMonth(int a_month){ month = a_month; }
	void SetYear(int a_year){ year = a_year; }
};

class MARK
{
	int * m_pu_mark;
	int size;
public:
	MARK(){
		size = 1;
		m_pu_mark = new int[size]; 
		m_pu_mark[0] = 0;
	}
	//n - цифра показывающая сколько оценок мы заполняем
	MARK(int size, int n, int mark, ...) 
	{
		this->size = size;
		m_pu_mark = new int[this->size];
		int *p_mark = &mark;

		for (int i = 0; i < n; i++)
		{
			m_pu_mark[i] = *(p_mark + i);
		}
		//остаток заполняем 0, что значит "оценки нет"
		for (int i = n; i < size; i++)
		{
			m_pu_mark[i] = 0;
		}
	}
	int GetMark(int)const;
	void SetMark(int uMark, int uPosition)
	{
		m_pu_mark[uPosition] = uMark;
	}
	~MARK(){ delete [] m_pu_mark; }
};
int MARK::GetMark(int position)const
{
	return m_pu_mark[position];
}

class Student
{
	DATE m_date;
	FIO m_fio;
	char * m_psHome;
	char * m_psPhone;
	MARK m_mark_zachet;
	MARK m_mark_kurs;
	MARK m_mark_exam;
public:
	Student(FIO a_fio, DATE a_date, char* a_home, char* a_phone, MARK mark_zachet, MARK mark_kurs, MARK mark_exam)
	{
		m_fio = a_fio;
		m_date = a_date;
		int Capacity_home = strlen(m_psHome) + 1;
		m_psHome = new char(Capacity_home);
		strcpy_s(m_psHome, Capacity_home, a_home);
		int Capacity_phone = strlen(m_psPhone) + 1;
		m_psPhone = new char(Capacity_phone);
		strcpy_s(m_psPhone, Capacity_phone, a_phone);
		m_mark_zachet = mark_zachet;
		m_mark_kurs = mark_kurs;
		m_mark_exam = mark_exam;
	}
	DATE GetDate()const{ return m_date; }
	FIO GetFIO()const{ return m_fio; }
};

int main(void)
{
	Student Vasya({ "Vasya", "Valera", "Petya" }, { 12, 12, 1989 }, "Zabolotnogo", "0634903258", { 5, 3, 1, 2, 3 },
	{ 6, 3, 4, 2, 3 }, { 7, 3, 5, 2, 3 });
	cout << Vasya.GetDate().GetYear;
}
